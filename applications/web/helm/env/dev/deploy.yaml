---
# Source: web/templates/namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: web
---
# Source: web/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    service: web
    release: prom-stack
    app.kubernetes.io/name: web
  name: web-service
  namespace: web
spec:
  ports:
  - name: "8484"
    port: 8484
    targetPort: 8484
  selector:
     app.kubernetes.io/name: web
  type: NodePort
---
# Source: web/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    service: web
    app.kubernetes.io/name: web
  name: web
  namespace: web
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app.kubernetes.io/name: web
    spec:
      containers:
        - name: web
          image: dockerhub.com/masf89/web:v0.0.1-78cdde9
          ports:
            - containerPort: 8484
          # readinessProbe:
          #   httpGet:
          #     scheme: HTTP
          #     path: /status
          #     port: 8484
          #   initialDelaySeconds: 3
          #   periodSeconds: 10
          envFrom:
            - secretRef:
                name: web-mysql-secrets
          resources:
            limits:
              memory: "128Mi"
            requests:
              cpu: "20m"
              memory: "128Mi"
          securityContext:
            allowPrivilegeEscalation: false
            runAsUser: 10001
            runAsGroup: 10001
            capabilities:
              drop: ["ALL"]
      restartPolicy: Always
---
# Source: web/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: web-ingress
  namespace: argocd
spec:
  ingressClassName: nginx
  rules:
    - http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: web-service
                port:
                  number: 80

